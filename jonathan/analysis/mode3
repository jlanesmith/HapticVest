import matplotlib.pyplot as plt
from openpyxl import load_workbook
from statistics import mean
from os import listdir
import numpy as np
import json

mode = 3
willPlot = False

startRow = 33

workbook = load_workbook(filename="C:\\Users\\jlane\\Google Drive\\My Files\\McGill University\\Shared Reality Lab\\Thesis\\Analysis.xlsx")
workbook.active = 0
sheet = workbook.active

for subject in range(1,12): # 1 to 11
  maxSession = 4 if subject != 11 else 2 # For Dad lol
  for session in range(1,maxSession): # 1 to 3

    allFiles = listdir(f"C:\\Users\\jlane\\Google Drive\\My Files\\McGill University\\Shared Reality Lab\\Thesis\\Data for Analysis\\Subject {subject}\\Session {session}")
    files = [f for f in allFiles if f[-1] == str(mode)]

    # Find whether haptics is first or not
    numListens = 0
    isBefore3 = True
    for f in allFiles:
      if f[-1] == str(4) or f[-1] == str(8):
        numListens = numListens + 1*(1 if isBefore3 else -1)
      elif f[-1] == str(3):
        isBefore3 = False
    hapticsFirst = numListens < 0

    # time, num mistakes
    results = []
    for fileName in files:
      f = open(f"C:\\Users\\jlane\\Google Drive\\My Files\\McGill University\\Shared Reality Lab\\Thesis\\Data for Analysis\\Subject {subject}\\Session {session}\\{fileName}", "r")

      vibration = []
      midi = []
      melodyNum = 0
      melody = []

      alreadyVibrated = False
      text = f.readline()
      while text:
        if "MIDI" in text:
          midi.append((int(text[5:7]), int(text[11:30])))
          if len(vibration) > 0 and int(text[5:7]) - 60 == vibration[-1][0]: # If you play the correct note
            alreadyVibrated = False
        elif "Vibrate" in text:
          if not (alreadyVibrated and len(vibration) > 0): # Skip if it's a repeat vibration
            extraSpace = 0 if text[9] == "," else 1 # For if note is double digits
            vibration.append([int(text[8:(9 + extraSpace)]), int(text[(15+extraSpace):(34+extraSpace)]), int(text[10 + extraSpace]), int(text[(-3):])]) # Note, time, duration, melodyIndex
          alreadyVibrated = True
        elif "Computer '\\\\'" in text:
          midi.append((41, int(text[17:36])))
        elif "Melody" in text:
          melodyNum = int(text[7])
          melody = json.loads(text[10:])

        text = f.readline()
      
      if len(vibration) == 0:
        continue

      i = 0 # Counter for Vibration data
      j = 0 # Counter for MIDI data

      startTime = vibration[0][1]
      numMistakes = 0
      melodyNoteIndex = 0

      for i in range(len(vibration)):
        melodyNoteIndex = vibration[i][3]
        foundNote = False
        while (not foundNote and j < len(midi)):
          if vibration[i][0] == midi[j][0] - 60 and midi[j][1] > vibration[i][1]: # If the correct note
            foundNote = True
          elif midi[j][0] == 41 or midi[j][0] == 36:
            if melodyNoteIndex == len(melody) or midi[j][0] == 36:
              startTime = vibration[i][1]
              numMistakes = 0
          else:
            numMistakes = numMistakes + 1
          j = j + 1
        if melodyNoteIndex == len(melody)-1:
          results.append(((midi[j-1][1]-startTime)/1000000000, numMistakes))

    print(results)

    sheet.cell(startRow, subject*3 + session - 2).value = melodyNum
    sheet.cell(startRow+1, subject*3 + session - 2).value = "Yes" if hapticsFirst else "No"
  
    if len(results) == 0:
      continue

    sheet.cell(startRow+2, subject*3 + session - 2).value = mean(a[0] for a in results)
    sheet.cell(startRow+3, subject*3 + session - 2).value = mean(a[1] for a in results)
     
    if willPlot:
      plt.plot([a[0] for a in results], label=subject)

      plt.legend()
      plt.ylabel("Time")
      plt.title("Time")
      plt.show()

    if willPlot:
      plt.plot([a[1] for a in results], label=subject)

      plt.legend()
      plt.ylabel("Mistakes")
      plt.title("Mistakes")
      plt.show()

workbook.save(filename="C:\\Users\\jlane\\Google Drive\\My Files\\McGill University\\Shared Reality Lab\\Thesis\\Analysis.xlsx")
