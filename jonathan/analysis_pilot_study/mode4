import matplotlib.pyplot as plt
from openpyxl import load_workbook
from statistics import mean
from os import listdir
import numpy as np
import json
from collections import defaultdict

startRow = 46

workbook = load_workbook(filename="C:\\Users\\jlane\\Google Drive\\My Files\\McGill University\\Shared Reality Lab\\Thesis\\Analysis.xlsx")
workbook.active = 0
sheet = workbook.active

def getScore(time,mistakes):
  return time*2 + mistakes

for subject in range(1,11): # 1 to 10

  for session in range(1,4): # 1 to 3

    allFiles = listdir(f"C:\\Users\\jlane\\Google Drive\\My Files\\McGill University\\Shared Reality Lab\\Thesis\\Data for Analysis\\Subject {subject}\\Session {session}")
    files = [f for f in allFiles if (f[-1] == str(4) or f[-1] == str(7))]

    # Find when mode 4 started
    mode4Start = 0
    mode4Files = [f for f in allFiles if f[-1] == str(4)]
    for mode4File in mode4Files:
      f = open(f"C:\\Users\\jlane\\Google Drive\\My Files\\McGill University\\Shared Reality Lab\\Thesis\\Data for Analysis\\Subject {subject}\\Session {session}\\{mode4File}", "r")
      text = f.readline()
      while text and mode4Start == 0:
        if "Melody" in text:
          melodyNum = int(text[7])
          if melodyNum == 0:
            break
        if "Audio" in text:
          mode4Start = int(text[12:31])
        else:
          text = f.readline()
      if mode4Start != 0:
        break

    # Arbitrarily large numbers
    bestTime = 1000
    bestMistakes = 1000

    results = defaultdict() # chunk: time
    for fileName in files:
      f = open(f"C:\\Users\\jlane\\Google Drive\\My Files\\McGill University\\Shared Reality Lab\\Thesis\\Data for Analysis\\Subject {subject}\\Session {session}\\{fileName}", "r")

      midi = []
      melodyNum = 0
      melody = []
      chunkNum = 0
      chunk = []

      text = f.readline()
      while text:
        if "MIDI" in text:
          midi.append((int(text[5:7]), int(text[11:30])))       
        elif "Computer '\\\\'" in text:
          midi.append((41, int(text[17:36])))
        elif "Melody" in text:
          melodyNum = int(text[7])
          melody = json.loads(text[10:])
        elif "Chunk" in text:
          chunkNum = int(text[6])
          chunk = json.loads(text[9:])
        text = f.readline()

      if melodyNum == 0:
        continue

      j = 0 # Counter for MIDI data
      c = 0 # Chunk counter
      m_initial = 0 if (subject != 5 and session != 1) else 1 # Michael missed the first note accidentally 
      mCounters = [m_initial] # Full melody counters (Since we don't know when the user started the melody)
      numMistakes = [0] # Melody mistakes

      while j < len(midi):
        if midi[j][0] in [36,41]:
          c = 0
          mCounters[0] = m_initial
          numMistakes[0] = 0
        elif midi[j][0] - 60 == melody[0][0]: # If it's the first note of the melody, maybe they're starting again
          mCounters.append(0)
          numMistakes.append(0)
        if midi[j][0]-60 == chunk[c][0]:
          c = c + 1
        for m in range(len(mCounters)):
          if midi[j][0]-60 == melody[mCounters[m]][0]:
            mCounters[m] = mCounters[m] + 1
          elif midi[j][0] >= 60 and midi[j][0] < 84:
            numMistakes[m] = numMistakes[m] + 1
          if mCounters[m] == len(melody):
            if 0 not in results:
              results[0] = (midi[j][1]-mode4Start)/1000000000/60
              bestTime = results[0]
              bestMistakes = numMistakes[m]
            else:
              bestScore = getScore(bestTime, bestMistakes)
              potentialTime = (midi[j][1]-mode4Start)/1000000000/60
              if getScore(potentialTime, numMistakes[m]) < bestScore:
                bestTime = potentialTime
                bestMistakes = numMistakes[m]
                results[0] = bestTime
            c = 0
            mCounters[m] = 0
            numMistakes[m] = 0
        if c == len(chunk):
          if chunkNum not in results:
            results[chunkNum] = (midi[j][1]-mode4Start)/1000000000/60
          c = 0
        j = j + 1
  
    if len(results) == 0:
      continue

    sheet.cell(startRow, subject*3 + session - 2).value = melodyNum

    chunkMapping = [1,2,5,3,4,6] # Because in the spreadsheet, chunk 5 is actually 1&2

    numCompleted = 0
    lengthOfTime = 10 # Arbitrarily large time, in minutes
    for i in range(1,7):
      if subject == 4 and i in [2,6]: # A few different things happened for Andrea
        results[chunkMapping[i-1]] = results[chunkMapping[i-2]] + 1.7 # She got chunk 2 and 3&4 slightly wrong but still mostly got it
      sheet.cell(startRow+i, subject*3 + session - 2).value = results[chunkMapping[i-1]] if chunkMapping[i-1] in results else ""
      if chunkMapping[i-1] in results:
        numCompleted = numCompleted + 1 if chunkMapping[i-1] != 5 else 3 # I skipped chunk 2 with Andrea
        lengthOfTime = results[chunkMapping[i-1]]

    if 0 in results:
      sheet.cell(startRow+7, subject*3 + session - 2).value = results[0]
      sheet.cell(startRow+8, subject*3 + session - 2).value = bestMistakes
      sheet.cell(startRow+9, subject*3 + session - 2).value = getScore(results[0], bestMistakes)
    else:
      score = 100 - numCompleted*10 + lengthOfTime*2
      sheet.cell(startRow+9, subject*3 + session - 2).value = score     

workbook.save(filename="C:\\Users\\jlane\\Google Drive\\My Files\\McGill University\\Shared Reality Lab\\Thesis\\Analysis.xlsx")
